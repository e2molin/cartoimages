{"version":3,"sources":["components/Gif.js","services/getGifs.js","components/ListOfGifs.js","App.js","reportWebVitals.js","index.js"],"names":["Gif","id","title","url","href","className","src","apiKey","ListOfGifs","keyword","params","useState","gifs","setGifs","useEffect","apiURL","fetch","then","res","json","response","data","Array","isArray","map","image","images","downsized_medium","getGifs","singleGif","App","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAMe,SAASA,EAAT,GAA8B,IAAhBC,EAAe,EAAfA,GAAGC,EAAY,EAAZA,MAAOC,EAAK,EAALA,IAErC,OACM,oBAAGC,KAAI,WAAMH,GAAMI,UAAU,eAA7B,UACE,6BAAKH,IACL,gCAAQD,IACR,qBAAKK,IAAKH,EAAKD,MAAOA,OCVhC,IAAMK,EAAS,mCCMA,SAASC,EAAT,GAAgC,IAEtCC,EAFqC,EAATC,OAE5BD,QAFqC,EAInBE,mBAAS,IAJU,mBAIpCC,EAJoC,KAI9BC,EAJ8B,KAc5C,OAPAC,qBAAU,YDXG,WAA6C,IAAD,0DAAH,IAAvBL,eAA0B,MAAhB,YAAgB,EAEnDM,EAAO,gDAAD,OAAiDR,EAAjD,cAA6DE,EAA7D,uCAEZ,OAAOO,MAAMD,GACVE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAW,IAAD,EAEIA,EAAXC,YAFO,MAEF,GAFE,EAId,GAAIC,MAAMC,QAAQF,GAMlB,OALeA,EAAKG,KAAI,SAAAC,GAAU,IACvBC,EAAqBD,EAArBC,OAEP,MAAO,CAACxB,MAFoBuB,EAAbvB,MAEAD,GAFawB,EAANxB,GAEHE,IADLuB,EAAOC,iBAAdxB,YCDbyB,CAAQ,CAAEnB,YACPQ,MAAK,SAAAL,GAAI,OAAGC,EAAQD,QACvB,CAACH,IAII,8BAEOG,EAAKY,KAAI,SAAAK,GAAS,OAChB,cAAC,EAAD,CAEE5B,GAAI4B,EAAU5B,GACdC,MAAO2B,EAAU3B,MACjBC,IAAK0B,EAAU1B,KAHV0B,EAAU5B,S,WCDpB6B,MAlBf,WAGE,OACE,qBAAKzB,UAAU,MAAf,SACE,0BAASA,UAAU,cAAnB,UACE,qCACA,0BAASA,UAAU,OAAnB,UACE,cAAC,IAAD,CAAM0B,GAAG,cAAT,4BACA,cAAC,IAAD,CAAMA,GAAG,aAAT,4BACA,cAAC,IAAD,CAAMA,GAAG,YAAT,+BAEF,cAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAWzB,UCPhC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56eb390a.chunk.js","sourcesContent":["/**\r\n * üß© Componente para generar las cards con las im√°genes  * \r\n */\r\nimport React from 'react'\r\nimport './Gif.css'\r\n\r\nexport default function Gif({id,title, url}){\r\n\r\n  return (\r\n        <a href={`#${id}`} className='Gifcontainer'>\r\n          <h4>{title}</h4>\r\n          <small>{id}</small>\r\n          <img src={url} title={title} />\r\n        </a>\r\n        ) \r\n\r\n}\r\n","//Accede a im√°genes de GiPHY. La cuenta de acceso es gratuita y te proporcionan un APIKEY\r\n\r\nconst apiKey = 'IjmmViOE2rq5nh9jplq6JWU32Dcak2Ju';\r\n\r\nexport default function getGifs({keyword = 'rembrandt'}={}){\r\n\r\n  const apiURL=`https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=25&offset=0&rating=g&lang=en`\r\n\r\n  return fetch(apiURL)\r\n    .then(res=>res.json())\r\n    .then(response=>{\r\n     \r\n      const {data=[]} = response;\r\n\r\n      if (Array.isArray(data))  {\r\n        const gifs = data.map(image => {\r\n          const {images, title, id} = image;\r\n          const {url} = images.downsized_medium;\r\n          return {title, id, url};\r\n        })  \r\n      return gifs\r\n    }\r\n  })\r\n}","/**\r\n * üß© Componente para generar un listado de im√°genes maquetdas en cards\r\n */\r\nimport React, {useEffect, useState} from 'react';\r\nimport Gif  from './Gif'\r\nimport getGifs from '../services/getGifs'\r\n\r\n\r\nexport default function ListOfGifs({ params }){\r\n\r\n  const {keyword} = params\r\n\r\n  const  [gifs, setGifs] = useState([])\r\n\r\n  //Se ejecuta cada vez que se renderiza el componente.\r\n  useEffect(function (){\r\n    getGifs({ keyword })\r\n      .then(gifs=> setGifs(gifs))\r\n  },[keyword])//La dependencia de este efecto es keyword. Al cambiar se volver√° a renderizar. S√≥lo se renderiza al cambar el valor de keyword\r\n  \r\n\r\n\r\n  return <div>\r\n            {\r\n                gifs.map(singleGif =>\r\n                  <Gif\r\n                    key={singleGif.id}\r\n                    id={singleGif.id} \r\n                    title={singleGif.title}\r\n                    url={singleGif.url}\r\n                  />\r\n                )            \r\n            }\r\n          </div>\r\n\r\n}","import React, {useState} from 'react';\nimport './App.css';\n\nimport ListOfGifs  from './components/ListOfGifs'\n\nimport {Link, Route} from \"wouter\"\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <section className=\"App-content\">\n        <h1>App</h1>\n        <section className=\"menu\">\n          <Link to=\"/gif/pandas\">Gifs de pandas</Link>\n          <Link to=\"/gif/tiger\">Gifs de tigres</Link>\n          <Link to=\"/gif/lion\">Gifs de leones</Link>\n        </section>\n        <Route path=\"/gif/:keyword\" component={ListOfGifs} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}